{
  "{\"plugins\":[{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$0\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$1\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$2\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$13\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$14\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$15\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$18\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$19\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$22\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$23\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$24\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$25\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$26\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$27\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$28\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"sourceRoot\":\"/Users/spamguy/src/log-report\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/spamguy/src/log-report\",\"filename\":\"/Users/spamguy/src/log-report/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/spamguy/src/log-report\",\"presets\":[]}:7.1.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/spamguy/src/log-report",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/spamguy/src/log-report",
      "filename": "/Users/spamguy/src/log-report/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/spamguy/src/log-report",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$0",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$1",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$2",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$3",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$4",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$5",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$6",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$7",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$8",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$9",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$10",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$11",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$12",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$13",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$14",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$15",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$16",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$17",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$18",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$19",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$22",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$23",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$24",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$25",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$26",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$27",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$28",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/spamguy/src/log-report/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/spamguy/src/log-report/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/spamguy/src/log-report",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _readline = require(\"readline\");\n\nvar _fs = require(\"fs\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogParser =\n/*#__PURE__*/\nfunction () {\n  function LogParser(fileName) {\n    _classCallCheck(this, LogParser);\n\n    var DEFAULT_FILE_NAME = 'sample.log';\n    this.logsIndexedByDayAndUrl = {};\n    var readInterface = (0, _readline.createInterface)({\n      input: (0, _fs.createReadStream)(fileName || DEFAULT_FILE_NAME)\n    });\n    readInterface.on('line', this._processLine);\n  }\n\n  _createClass(LogParser, [{\n    key: \"_processLine\",\n    value: function _processLine(line) {\n      var _line$split = line.split('|'),\n          _line$split2 = _slicedToArray(_line$split, 2),\n          seconds = _line$split2[0],\n          url = _line$split2[1];\n\n      _index(new Date(seconds * 1000), url);\n    }\n  }, {\n    key: \"_index\",\n    value: function _index(logDate, url) {\n      var month = _formatWithLeading0(logDate.getUTCMonth());\n\n      var day = _formatWithLeading0(logDate.getUTCDate());\n\n      var dateString = \"\".concat(month, \"/\").concat(day, \"/\").concat(logDate.getUTCFullYear(), \" GMT\"); // Initialize subdictionary if it's not already present.\n\n      if (!this.logsIndexedByDayAndUrl[dateString]) {\n        this.logsIndexedByDayAndUrl[dateString] = {};\n      }\n\n      if (!this.logsIndexedByDayAndUrl[dateString][url]) {\n        this.logsIndexedByDayAndUrl[dateString][url] = 1;\n      } else {\n        this.logsIndexedByDayAndUrl[dateString][url]++;\n      }\n    }\n  }, {\n    key: \"_formatWithLeading0\",\n    value: function _formatWithLeading0(value) {\n      return String(value).padStart(2, '0');\n    }\n  }, {\n    key: \"printReport\",\n    value: function printReport() {\n      for (var key in Object.keys(this.logsIndexedByDayAndUrl).sort()) {\n        printReportForDate(key);\n      }\n    }\n  }, {\n    key: \"printReportForDate\",\n    value: function printReportForDate(dateString) {\n      console.log(dateString);\n    }\n  }]);\n\n  return LogParser;\n}();\n\nvar parser = new LogParser(process.argv[2]);\nparser.printReport();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkxvZ1BhcnNlciIsImZpbGVOYW1lIiwiREVGQVVMVF9GSUxFX05BTUUiLCJsb2dzSW5kZXhlZEJ5RGF5QW5kVXJsIiwicmVhZEludGVyZmFjZSIsImlucHV0Iiwib24iLCJfcHJvY2Vzc0xpbmUiLCJsaW5lIiwic3BsaXQiLCJzZWNvbmRzIiwidXJsIiwiX2luZGV4IiwiRGF0ZSIsImxvZ0RhdGUiLCJtb250aCIsIl9mb3JtYXRXaXRoTGVhZGluZzAiLCJnZXRVVENNb250aCIsImRheSIsImdldFVUQ0RhdGUiLCJkYXRlU3RyaW5nIiwiZ2V0VVRDRnVsbFllYXIiLCJ2YWx1ZSIsIlN0cmluZyIsInBhZFN0YXJ0Iiwia2V5IiwiT2JqZWN0Iiwia2V5cyIsInNvcnQiLCJwcmludFJlcG9ydEZvckRhdGUiLCJjb25zb2xlIiwibG9nIiwicGFyc2VyIiwicHJvY2VzcyIsImFyZ3YiLCJwcmludFJlcG9ydCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztJQUVNQSxTOzs7QUFDRixxQkFBWUMsUUFBWixFQUFzQjtBQUFBOztBQUNsQixRQUFNQyxpQkFBaUIsR0FBRyxZQUExQjtBQUNBLFNBQUtDLHNCQUFMLEdBQThCLEVBQTlCO0FBRUEsUUFBTUMsYUFBYSxHQUFHLCtCQUFnQjtBQUNsQ0MsTUFBQUEsS0FBSyxFQUFFLDBCQUFpQkosUUFBUSxJQUFJQyxpQkFBN0I7QUFEMkIsS0FBaEIsQ0FBdEI7QUFJQUUsSUFBQUEsYUFBYSxDQUFDRSxFQUFkLENBQWlCLE1BQWpCLEVBQXlCLEtBQUtDLFlBQTlCO0FBQ0g7Ozs7aUNBRVlDLEksRUFBTTtBQUFBLHdCQUNRQSxJQUFJLENBQUNDLEtBQUwsQ0FBVyxHQUFYLENBRFI7QUFBQTtBQUFBLFVBQ1JDLE9BRFE7QUFBQSxVQUNDQyxHQUREOztBQUVmQyxNQUFBQSxNQUFNLENBQUMsSUFBSUMsSUFBSixDQUFTSCxPQUFPLEdBQUcsSUFBbkIsQ0FBRCxFQUEyQkMsR0FBM0IsQ0FBTjtBQUNIOzs7MkJBRU1HLE8sRUFBU0gsRyxFQUFLO0FBQ2pCLFVBQU1JLEtBQUssR0FBR0MsbUJBQW1CLENBQUNGLE9BQU8sQ0FBQ0csV0FBUixFQUFELENBQWpDOztBQUNBLFVBQU1DLEdBQUcsR0FBR0YsbUJBQW1CLENBQUNGLE9BQU8sQ0FBQ0ssVUFBUixFQUFELENBQS9COztBQUNBLFVBQU1DLFVBQVUsYUFBTUwsS0FBTixjQUFlRyxHQUFmLGNBQXNCSixPQUFPLENBQUNPLGNBQVIsRUFBdEIsU0FBaEIsQ0FIaUIsQ0FLakI7O0FBQ0EsVUFBSSxDQUFDLEtBQUtsQixzQkFBTCxDQUE0QmlCLFVBQTVCLENBQUwsRUFBOEM7QUFDMUMsYUFBS2pCLHNCQUFMLENBQTRCaUIsVUFBNUIsSUFBMEMsRUFBMUM7QUFDSDs7QUFFRCxVQUFJLENBQUMsS0FBS2pCLHNCQUFMLENBQTRCaUIsVUFBNUIsRUFBd0NULEdBQXhDLENBQUwsRUFBbUQ7QUFDL0MsYUFBS1Isc0JBQUwsQ0FBNEJpQixVQUE1QixFQUF3Q1QsR0FBeEMsSUFBK0MsQ0FBL0M7QUFDSCxPQUZELE1BR0s7QUFDRCxhQUFLUixzQkFBTCxDQUE0QmlCLFVBQTVCLEVBQXdDVCxHQUF4QztBQUNIO0FBQ0o7Ozt3Q0FFbUJXLEssRUFBTztBQUN2QixhQUFPQyxNQUFNLENBQUNELEtBQUQsQ0FBTixDQUFjRSxRQUFkLENBQXVCLENBQXZCLEVBQTBCLEdBQTFCLENBQVA7QUFDSDs7O2tDQUVhO0FBQ1YsV0FBSyxJQUFJQyxHQUFULElBQWdCQyxNQUFNLENBQUNDLElBQVAsQ0FBWSxLQUFLeEIsc0JBQWpCLEVBQXlDeUIsSUFBekMsRUFBaEIsRUFBaUU7QUFDN0RDLFFBQUFBLGtCQUFrQixDQUFDSixHQUFELENBQWxCO0FBQ0g7QUFDSjs7O3VDQUVrQkwsVSxFQUFZO0FBQzNCVSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVgsVUFBWjtBQUNIOzs7Ozs7QUFHTCxJQUFNWSxNQUFNLEdBQUcsSUFBSWhDLFNBQUosQ0FBY2lDLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLENBQWIsQ0FBZCxDQUFmO0FBQ0FGLE1BQU0sQ0FBQ0csV0FBUCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc3BhbWd1eS9zcmMvbG9nLXJlcG9ydCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y3JlYXRlSW50ZXJmYWNlfSBmcm9tICdyZWFkbGluZSc7XG5pbXBvcnQge2NyZWF0ZVJlYWRTdHJlYW19IGZyb20gJ2ZzJztcblxuY2xhc3MgTG9nUGFyc2VyIHtcbiAgICBjb25zdHJ1Y3RvcihmaWxlTmFtZSkge1xuICAgICAgICBjb25zdCBERUZBVUxUX0ZJTEVfTkFNRSA9ICdzYW1wbGUubG9nJztcbiAgICAgICAgdGhpcy5sb2dzSW5kZXhlZEJ5RGF5QW5kVXJsID0geyB9O1xuXG4gICAgICAgIGNvbnN0IHJlYWRJbnRlcmZhY2UgPSBjcmVhdGVJbnRlcmZhY2Uoe1xuICAgICAgICAgICAgaW5wdXQ6IGNyZWF0ZVJlYWRTdHJlYW0oZmlsZU5hbWUgfHwgREVGQVVMVF9GSUxFX05BTUUpXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJlYWRJbnRlcmZhY2Uub24oJ2xpbmUnLCB0aGlzLl9wcm9jZXNzTGluZSk7XG4gICAgfVxuXG4gICAgX3Byb2Nlc3NMaW5lKGxpbmUpIHtcbiAgICAgICAgY29uc3QgW3NlY29uZHMsIHVybF0gPSBsaW5lLnNwbGl0KCd8Jyk7XG4gICAgICAgIF9pbmRleChuZXcgRGF0ZShzZWNvbmRzICogMTAwMCksIHVybCk7XG4gICAgfVxuXG4gICAgX2luZGV4KGxvZ0RhdGUsIHVybCkge1xuICAgICAgICBjb25zdCBtb250aCA9IF9mb3JtYXRXaXRoTGVhZGluZzAobG9nRGF0ZS5nZXRVVENNb250aCgpKTtcbiAgICAgICAgY29uc3QgZGF5ID0gX2Zvcm1hdFdpdGhMZWFkaW5nMChsb2dEYXRlLmdldFVUQ0RhdGUoKSk7XG4gICAgICAgIGNvbnN0IGRhdGVTdHJpbmcgPSBgJHttb250aH0vJHtkYXl9LyR7bG9nRGF0ZS5nZXRVVENGdWxsWWVhcigpfSBHTVRgO1xuXG4gICAgICAgIC8vIEluaXRpYWxpemUgc3ViZGljdGlvbmFyeSBpZiBpdCdzIG5vdCBhbHJlYWR5IHByZXNlbnQuXG4gICAgICAgIGlmICghdGhpcy5sb2dzSW5kZXhlZEJ5RGF5QW5kVXJsW2RhdGVTdHJpbmddKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ3NJbmRleGVkQnlEYXlBbmRVcmxbZGF0ZVN0cmluZ10gPSB7IH07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMubG9nc0luZGV4ZWRCeURheUFuZFVybFtkYXRlU3RyaW5nXVt1cmxdKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ3NJbmRleGVkQnlEYXlBbmRVcmxbZGF0ZVN0cmluZ11bdXJsXSA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmxvZ3NJbmRleGVkQnlEYXlBbmRVcmxbZGF0ZVN0cmluZ11bdXJsXSsrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX2Zvcm1hdFdpdGhMZWFkaW5nMCh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKS5wYWRTdGFydCgyLCAnMCcpO1xuICAgIH1cblxuICAgIHByaW50UmVwb3J0KCkge1xuICAgICAgICBmb3IgKGxldCBrZXkgaW4gT2JqZWN0LmtleXModGhpcy5sb2dzSW5kZXhlZEJ5RGF5QW5kVXJsKS5zb3J0KCkpIHtcbiAgICAgICAgICAgIHByaW50UmVwb3J0Rm9yRGF0ZShrZXkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpbnRSZXBvcnRGb3JEYXRlKGRhdGVTdHJpbmcpIHtcbiAgICAgICAgY29uc29sZS5sb2coZGF0ZVN0cmluZyk7XG4gICAgfVxufVxuXG5jb25zdCBwYXJzZXIgPSBuZXcgTG9nUGFyc2VyKHByb2Nlc3MuYXJndlsyXSk7XG5wYXJzZXIucHJpbnRSZXBvcnQoKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "LogParser",
        "fileName",
        "DEFAULT_FILE_NAME",
        "logsIndexedByDayAndUrl",
        "readInterface",
        "input",
        "on",
        "_processLine",
        "line",
        "split",
        "seconds",
        "url",
        "_index",
        "Date",
        "logDate",
        "month",
        "_formatWithLeading0",
        "getUTCMonth",
        "day",
        "getUTCDate",
        "dateString",
        "getUTCFullYear",
        "value",
        "String",
        "padStart",
        "key",
        "Object",
        "keys",
        "sort",
        "printReportForDate",
        "console",
        "log",
        "parser",
        "process",
        "argv",
        "printReport"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;;;;;;;;;IAEMA,S;;;AACF,qBAAYC,QAAZ,EAAsB;AAAA;;AAClB,QAAMC,iBAAiB,GAAG,YAA1B;AACA,SAAKC,sBAAL,GAA8B,EAA9B;AAEA,QAAMC,aAAa,GAAG,+BAAgB;AAClCC,MAAAA,KAAK,EAAE,0BAAiBJ,QAAQ,IAAIC,iBAA7B;AAD2B,KAAhB,CAAtB;AAIAE,IAAAA,aAAa,CAACE,EAAd,CAAiB,MAAjB,EAAyB,KAAKC,YAA9B;AACH;;;;iCAEYC,I,EAAM;AAAA,wBACQA,IAAI,CAACC,KAAL,CAAW,GAAX,CADR;AAAA;AAAA,UACRC,OADQ;AAAA,UACCC,GADD;;AAEfC,MAAAA,MAAM,CAAC,IAAIC,IAAJ,CAASH,OAAO,GAAG,IAAnB,CAAD,EAA2BC,GAA3B,CAAN;AACH;;;2BAEMG,O,EAASH,G,EAAK;AACjB,UAAMI,KAAK,GAAGC,mBAAmB,CAACF,OAAO,CAACG,WAAR,EAAD,CAAjC;;AACA,UAAMC,GAAG,GAAGF,mBAAmB,CAACF,OAAO,CAACK,UAAR,EAAD,CAA/B;;AACA,UAAMC,UAAU,aAAML,KAAN,cAAeG,GAAf,cAAsBJ,OAAO,CAACO,cAAR,EAAtB,SAAhB,CAHiB,CAKjB;;AACA,UAAI,CAAC,KAAKlB,sBAAL,CAA4BiB,UAA5B,CAAL,EAA8C;AAC1C,aAAKjB,sBAAL,CAA4BiB,UAA5B,IAA0C,EAA1C;AACH;;AAED,UAAI,CAAC,KAAKjB,sBAAL,CAA4BiB,UAA5B,EAAwCT,GAAxC,CAAL,EAAmD;AAC/C,aAAKR,sBAAL,CAA4BiB,UAA5B,EAAwCT,GAAxC,IAA+C,CAA/C;AACH,OAFD,MAGK;AACD,aAAKR,sBAAL,CAA4BiB,UAA5B,EAAwCT,GAAxC;AACH;AACJ;;;wCAEmBW,K,EAAO;AACvB,aAAOC,MAAM,CAACD,KAAD,CAAN,CAAcE,QAAd,CAAuB,CAAvB,EAA0B,GAA1B,CAAP;AACH;;;kCAEa;AACV,WAAK,IAAIC,GAAT,IAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKxB,sBAAjB,EAAyCyB,IAAzC,EAAhB,EAAiE;AAC7DC,QAAAA,kBAAkB,CAACJ,GAAD,CAAlB;AACH;AACJ;;;uCAEkBL,U,EAAY;AAC3BU,MAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AACH;;;;;;AAGL,IAAMY,MAAM,GAAG,IAAIhC,SAAJ,CAAciC,OAAO,CAACC,IAAR,CAAa,CAAb,CAAd,CAAf;AACAF,MAAM,CAACG,WAAP",
      "sourceRoot": "/Users/spamguy/src/log-report",
      "sourcesContent": [
        "import {createInterface} from 'readline';\nimport {createReadStream} from 'fs';\n\nclass LogParser {\n    constructor(fileName) {\n        const DEFAULT_FILE_NAME = 'sample.log';\n        this.logsIndexedByDayAndUrl = { };\n\n        const readInterface = createInterface({\n            input: createReadStream(fileName || DEFAULT_FILE_NAME)\n        });\n\n        readInterface.on('line', this._processLine);\n    }\n\n    _processLine(line) {\n        const [seconds, url] = line.split('|');\n        _index(new Date(seconds * 1000), url);\n    }\n\n    _index(logDate, url) {\n        const month = _formatWithLeading0(logDate.getUTCMonth());\n        const day = _formatWithLeading0(logDate.getUTCDate());\n        const dateString = `${month}/${day}/${logDate.getUTCFullYear()} GMT`;\n\n        // Initialize subdictionary if it's not already present.\n        if (!this.logsIndexedByDayAndUrl[dateString]) {\n            this.logsIndexedByDayAndUrl[dateString] = { };\n        }\n\n        if (!this.logsIndexedByDayAndUrl[dateString][url]) {\n            this.logsIndexedByDayAndUrl[dateString][url] = 1;\n        }\n        else {\n            this.logsIndexedByDayAndUrl[dateString][url]++;\n        }\n    }\n\n    _formatWithLeading0(value) {\n        return String(value).padStart(2, '0');\n    }\n\n    printReport() {\n        for (let key in Object.keys(this.logsIndexedByDayAndUrl).sort()) {\n            printReportForDate(key);\n        }\n    }\n\n    printReportForDate(dateString) {\n        console.log(dateString);\n    }\n}\n\nconst parser = new LogParser(process.argv[2]);\nparser.printReport();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1537552475345
  },
  "{\"plugins\":[{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$0\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$1\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$2\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$13\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$14\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$15\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$18\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$19\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$22\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$23\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$24\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$25\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$26\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$27\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$28\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"sourceMaps\":true,\"sourceRoot\":\"/Users/spamguy/src/log-report\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/spamguy/src/log-report\",\"filename\":\"/Users/spamguy/src/log-report/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/spamguy/src/log-report\",\"presets\":[]}:7.1.0": {
    "metadata": {},
    "options": {
      "sourceMaps": true,
      "sourceRoot": "/Users/spamguy/src/log-report",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/spamguy/src/log-report",
      "filename": "/Users/spamguy/src/log-report/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/spamguy/src/log-report",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$0",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$1",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$2",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$3",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$4",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$5",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$6",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$7",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$8",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$9",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$10",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$11",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$12",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$13",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$14",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$15",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$16",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$17",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$18",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$19",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$22",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$23",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$24",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$25",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$26",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$27",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "/Users/spamguy/src/log-report/node_modules/@babel/preset-env/lib/index.js$28",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/spamguy/src/log-report/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/spamguy/src/log-report/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": true,
        "sourceRoot": "/Users/spamguy/src/log-report",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _readline = require(\"readline\");\n\nvar _fs = require(\"fs\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogParser =\n/*#__PURE__*/\nfunction () {\n  function LogParser(fileName) {\n    var _this = this;\n\n    _classCallCheck(this, LogParser);\n\n    if (!fileName) {\n      throw new Error('A file path must be passed in as an argument; e.g., \\'npm run start sample.log\\'.');\n    }\n\n    this.logsIndexedByDayAndUrl = {};\n    var readInterface = (0, _readline.createInterface)({\n      input: (0, _fs.createReadStream)(fileName)\n    }); // Use bind() to keep scope focused on class, not the interface.\n\n    readInterface.on('line', this._processLine.bind(this));\n    readInterface.on('close', function () {\n      return _this.printReport();\n    });\n  }\n  /**\n   * Handles incoming lines from the input stream.\n   * @param {String} line A single line.\n   * @return {void}\n   */\n\n\n  _createClass(LogParser, [{\n    key: \"_processLine\",\n    value: function _processLine(line) {\n      var _line$split = line.split('|'),\n          _line$split2 = _slicedToArray(_line$split, 2),\n          seconds = _line$split2[0],\n          url = _line$split2[1];\n\n      this._index(new Date(seconds * 1000), url);\n    }\n    /**\n     * Indexes a log by date and URL.\n     * @param {Date} logDate The date of the log.\n     * @param {*} url The URL.\n     * @return {void}\n     */\n\n  }, {\n    key: \"_index\",\n    value: function _index(logDate, url) {\n      var month = this._formatWithLeading0(logDate.getUTCMonth() + 1); // Months are 0-indexed.\n\n\n      var day = this._formatWithLeading0(logDate.getUTCDate());\n\n      var dateString = \"\".concat(month, \"/\").concat(day, \"/\").concat(logDate.getUTCFullYear(), \" GMT\"); // Initialize subdictionary if it's not already present.\n\n      if (!this.logsIndexedByDayAndUrl[dateString]) {\n        this.logsIndexedByDayAndUrl[dateString] = {};\n      }\n\n      if (!this.logsIndexedByDayAndUrl[dateString][url]) {\n        this.logsIndexedByDayAndUrl[dateString][url] = 1;\n      } else {\n        this.logsIndexedByDayAndUrl[dateString][url]++;\n      }\n    }\n    /**\n     * \n     * @param {Number} value A number.\n     * @return {String} A string equivalent left-padded by 0s.\n     */\n\n  }, {\n    key: \"_formatWithLeading0\",\n    value: function _formatWithLeading0(value) {\n      return String(value).padStart(2, '0');\n    }\n    /**\n     * Compares two URL/hit count pairs.\n     * @param {Array} pair1 A pair of values.\n     * @param {String} pair1[0] A URL.\n     * @param {Number} pair1[1] The number of times the URL was hit.\n     * @param {Array} pair2 A pair of values.\n     * @param {String} pair2[0] A URL.\n     * @param {Number} pair2[1] The number of times the URL was hit.\n     * @return {Number} A positive number if b's count is greater than a.\n     */\n\n  }, {\n    key: \"_descendingCount\",\n    value: function _descendingCount(_ref, _ref2) {\n      var _ref3 = _slicedToArray(_ref, 2),\n          aUrl = _ref3[0],\n          aCount = _ref3[1];\n\n      var _ref4 = _slicedToArray(_ref2, 2),\n          bUrl = _ref4[0],\n          bCount = _ref4[1];\n\n      return bCount - aCount;\n    }\n    /**\n     * Outputs a URL and its hit count.\n     * @param {Array} pair A pair of values.\n     * @param {String} pair[0] A URL.\n     * @param {Number} pair[1] The number of times the URL was hit.\n     * @return {void}\n     */\n\n  }, {\n    key: \"_printUrlAndCount\",\n    value: function _printUrlAndCount(_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          url = _ref6[0],\n          count = _ref6[1];\n\n      console.log(\"\".concat(url, \" \").concat(count));\n    }\n    /**\n     * Prints a report of URL visits (descending) grouped by day (ascending).\n     * @return {void}\n     */\n\n  }, {\n    key: \"printReport\",\n    value: function printReport() {\n      var sortedDays = Object.keys(this.logsIndexedByDayAndUrl).sort();\n\n      for (var k = 0; k < sortedDays.length; k++) {\n        this.printReportForDate(sortedDays[k]);\n      }\n    }\n    /**\n     * Prints a report of URL visits (descending) for a single day.\n     * @param {String} dateString A date string.\n     * @return {void}\n     */\n\n  }, {\n    key: \"printReportForDate\",\n    value: function printReportForDate(dateString) {\n      console.log(dateString);\n      var urlsAndCounts = this.logsIndexedByDayAndUrl[dateString];\n      var sortedUrlsAndCounts = Object.entries(urlsAndCounts || {}).sort(this._descendingCount);\n      sortedUrlsAndCounts.forEach(this._printUrlAndCount);\n    }\n  }]);\n\n  return LogParser;\n}();\n\ntry {\n  new LogParser(process.argv[2]);\n} catch (ex) {\n  console.error(ex.toString());\n}",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "LogParser",
        "fileName",
        "Error",
        "logsIndexedByDayAndUrl",
        "readInterface",
        "input",
        "on",
        "_processLine",
        "bind",
        "printReport",
        "line",
        "split",
        "seconds",
        "url",
        "_index",
        "Date",
        "logDate",
        "month",
        "_formatWithLeading0",
        "getUTCMonth",
        "day",
        "getUTCDate",
        "dateString",
        "getUTCFullYear",
        "value",
        "String",
        "padStart",
        "aUrl",
        "aCount",
        "bUrl",
        "bCount",
        "count",
        "console",
        "log",
        "sortedDays",
        "Object",
        "keys",
        "sort",
        "k",
        "length",
        "printReportForDate",
        "urlsAndCounts",
        "sortedUrlsAndCounts",
        "entries",
        "_descendingCount",
        "forEach",
        "_printUrlAndCount",
        "process",
        "argv",
        "ex",
        "error",
        "toString"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;;;;;;;;;IAEMA,S;;;AACF,qBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AAClB,QAAI,CAACA,QAAL,EAAe;AACX,YAAM,IAAIC,KAAJ,CAAU,mFAAV,CAAN;AACH;;AAED,SAAKC,sBAAL,GAA8B,EAA9B;AAEA,QAAMC,aAAa,GAAG,+BAAgB;AAClCC,MAAAA,KAAK,EAAE,0BAAiBJ,QAAjB;AAD2B,KAAhB,CAAtB,CAPkB,CAWlB;;AACAG,IAAAA,aAAa,CAACE,EAAd,CAAiB,MAAjB,EAAyB,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAzB;AAEAJ,IAAAA,aAAa,CAACE,EAAd,CAAiB,OAAjB,EAA0B;AAAA,aAAM,KAAI,CAACG,WAAL,EAAN;AAAA,KAA1B;AACH;AAED;;;;;;;;;iCAKaC,I,EAAM;AAAA,wBACQA,IAAI,CAACC,KAAL,CAAW,GAAX,CADR;AAAA;AAAA,UACRC,OADQ;AAAA,UACCC,GADD;;AAGf,WAAKC,MAAL,CAAY,IAAIC,IAAJ,CAASH,OAAO,GAAG,IAAnB,CAAZ,EAAsCC,GAAtC;AACH;AAED;;;;;;;;;2BAMOG,O,EAASH,G,EAAK;AACjB,UAAMI,KAAK,GAAG,KAAKC,mBAAL,CAAyBF,OAAO,CAACG,WAAR,KAAwB,CAAjD,CAAd,CADiB,CACkD;;;AACnE,UAAMC,GAAG,GAAG,KAAKF,mBAAL,CAAyBF,OAAO,CAACK,UAAR,EAAzB,CAAZ;;AACA,UAAMC,UAAU,aAAML,KAAN,cAAeG,GAAf,cAAsBJ,OAAO,CAACO,cAAR,EAAtB,SAAhB,CAHiB,CAKjB;;AACA,UAAI,CAAC,KAAKpB,sBAAL,CAA4BmB,UAA5B,CAAL,EAA8C;AAC1C,aAAKnB,sBAAL,CAA4BmB,UAA5B,IAA0C,EAA1C;AACH;;AAED,UAAI,CAAC,KAAKnB,sBAAL,CAA4BmB,UAA5B,EAAwCT,GAAxC,CAAL,EAAmD;AAC/C,aAAKV,sBAAL,CAA4BmB,UAA5B,EAAwCT,GAAxC,IAA+C,CAA/C;AACH,OAFD,MAGK;AACD,aAAKV,sBAAL,CAA4BmB,UAA5B,EAAwCT,GAAxC;AACH;AACJ;AAED;;;;;;;;wCAKoBW,K,EAAO;AACvB,aAAOC,MAAM,CAACD,KAAD,CAAN,CAAcE,QAAd,CAAuB,CAAvB,EAA0B,GAA1B,CAAP;AACH;AAED;;;;;;;;;;;;;kDAUiD;AAAA;AAAA,UAA/BC,IAA+B;AAAA,UAAzBC,MAAyB;;AAAA;AAAA,UAAfC,IAAe;AAAA,UAATC,MAAS;;AAC7C,aAAOA,MAAM,GAAGF,MAAhB;AACH;AAED;;;;;;;;;;6CAOgC;AAAA;AAAA,UAAbf,GAAa;AAAA,UAARkB,KAAQ;;AAC5BC,MAAAA,OAAO,CAACC,GAAR,WAAepB,GAAf,cAAsBkB,KAAtB;AACH;AAED;;;;;;;kCAIc;AACV,UAAMG,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKjC,sBAAjB,EAAyCkC,IAAzC,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACK,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,aAAKE,kBAAL,CAAwBN,UAAU,CAACI,CAAD,CAAlC;AACH;AACJ;AAED;;;;;;;;uCAKmBhB,U,EAAY;AAC3BU,MAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AAEA,UAAMmB,aAAa,GAAG,KAAKtC,sBAAL,CAA4BmB,UAA5B,CAAtB;AACA,UAAMoB,mBAAmB,GAAGP,MAAM,CAACQ,OAAP,CAAeF,aAAa,IAAI,EAAhC,EAAoCJ,IAApC,CAAyC,KAAKO,gBAA9C,CAA5B;AACAF,MAAAA,mBAAmB,CAACG,OAApB,CAA4B,KAAKC,iBAAjC;AACH;;;;;;AAGL,IAAI;AACA,MAAI9C,SAAJ,CAAc+C,OAAO,CAACC,IAAR,CAAa,CAAb,CAAd;AACH,CAFD,CAGA,OAAOC,EAAP,EAAW;AACPjB,EAAAA,OAAO,CAACkB,KAAR,CAAcD,EAAE,CAACE,QAAH,EAAd;AACH",
      "sourceRoot": "/Users/spamguy/src/log-report",
      "sourcesContent": [
        "import {createInterface} from 'readline';\nimport {createReadStream} from 'fs';\n\nclass LogParser {\n    constructor(fileName) {\n        if (!fileName) {\n            throw new Error('A file path must be passed in as an argument; e.g., \\'npm run start sample.log\\'.');\n        }\n\n        this.logsIndexedByDayAndUrl = { };\n\n        const readInterface = createInterface({\n            input: createReadStream(fileName)\n        });\n\n        // Use bind() to keep scope focused on class, not the interface.\n        readInterface.on('line', this._processLine.bind(this));\n\n        readInterface.on('close', () => this.printReport());\n    }\n\n    /**\n     * Handles incoming lines from the input stream.\n     * @param {String} line A single line.\n     * @return {void}\n     */\n    _processLine(line) {\n        const [seconds, url] = line.split('|');\n\n        this._index(new Date(seconds * 1000), url);\n    }\n\n    /**\n     * Indexes a log by date and URL.\n     * @param {Date} logDate The date of the log.\n     * @param {*} url The URL.\n     * @return {void}\n     */\n    _index(logDate, url) {\n        const month = this._formatWithLeading0(logDate.getUTCMonth() + 1); // Months are 0-indexed.\n        const day = this._formatWithLeading0(logDate.getUTCDate());\n        const dateString = `${month}/${day}/${logDate.getUTCFullYear()} GMT`;\n\n        // Initialize subdictionary if it's not already present.\n        if (!this.logsIndexedByDayAndUrl[dateString]) {\n            this.logsIndexedByDayAndUrl[dateString] = { };\n        }\n\n        if (!this.logsIndexedByDayAndUrl[dateString][url]) {\n            this.logsIndexedByDayAndUrl[dateString][url] = 1;\n        }\n        else {\n            this.logsIndexedByDayAndUrl[dateString][url]++;\n        }\n    }\n\n    /**\n     * \n     * @param {Number} value A number.\n     * @return {String} A string equivalent left-padded by 0s.\n     */\n    _formatWithLeading0(value) {\n        return String(value).padStart(2, '0');\n    }\n\n    /**\n     * Compares two URL/hit count pairs.\n     * @param {Array} pair1 A pair of values.\n     * @param {String} pair1[0] A URL.\n     * @param {Number} pair1[1] The number of times the URL was hit.\n     * @param {Array} pair2 A pair of values.\n     * @param {String} pair2[0] A URL.\n     * @param {Number} pair2[1] The number of times the URL was hit.\n     * @return {Number} A positive number if b's count is greater than a.\n     */\n    _descendingCount([aUrl, aCount], [bUrl, bCount]) {\n        return bCount - aCount;\n    }\n\n    /**\n     * Outputs a URL and its hit count.\n     * @param {Array} pair A pair of values.\n     * @param {String} pair[0] A URL.\n     * @param {Number} pair[1] The number of times the URL was hit.\n     * @return {void}\n     */\n    _printUrlAndCount([url, count]) {\n        console.log(`${url} ${count}`);\n    }\n\n    /**\n     * Prints a report of URL visits (descending) grouped by day (ascending).\n     * @return {void}\n     */\n    printReport() {\n        const sortedDays = Object.keys(this.logsIndexedByDayAndUrl).sort();\n        for (let k = 0; k < sortedDays.length; k++) {\n            this.printReportForDate(sortedDays[k]);\n        }\n    }\n\n    /**\n     * Prints a report of URL visits (descending) for a single day.\n     * @param {String} dateString A date string.\n     * @return {void}\n     */\n    printReportForDate(dateString) {\n        console.log(dateString);\n\n        const urlsAndCounts = this.logsIndexedByDayAndUrl[dateString];\n        const sortedUrlsAndCounts = Object.entries(urlsAndCounts || {}).sort(this._descendingCount);\n        sortedUrlsAndCounts.forEach(this._printUrlAndCount);\n    }\n}\n\ntry {\n    new LogParser(process.argv[2]);\n}\ncatch (ex) {\n    console.error(ex.toString());\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1537558651259
  }
}